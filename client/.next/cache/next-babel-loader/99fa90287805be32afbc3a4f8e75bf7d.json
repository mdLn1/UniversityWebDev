{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport axios from \"axios\";\nimport { Pagination } from \"semantic-ui-react\";\n\nclass ElectionIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedPage: Number,\n      numberOfPages: Number,\n      listOfIdeas: []\n    });\n  }\n\n  async componentDidMount() {\n    this.setState({\n      selectedPage: 1\n    });\n\n    try {\n      const res = await axios.get(`http://localhost:5000/api/ideas?itemsCount=5&pageNo=${this.state.selectedPage}`);\n      this.setState({\n        listOfIdeas: res.data.ideas\n      });\n      this.setState({\n        numberOfPages: Math.ceil(res.data[\"totalIdeas\"] / 5)\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  renderIdeas() {\n    console.log(\"test\");\n    const items = this.state.listOfIdeas.map(idea => {\n      return {\n        header: idea.Title,\n        description: idea.description,\n        fluid: true\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Dashboard Homepage\"), thise.renderIdeas()));\n  }\n\n}\n\nexport default ElectionIndex;","map":{"version":3,"sources":["/Users/gabriel/Documents/UniversityWebDev/client/pages/index.js"],"names":["React","Component","Layout","Card","Link","axios","Pagination","ElectionIndex","selectedPage","Number","numberOfPages","listOfIdeas","componentDidMount","setState","res","get","state","data","ideas","Math","ceil","err","console","log","renderIdeas","items","map","idea","header","Title","description","fluid","render","thise"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,IAAT,QAAqB,mBAArB;AACA,SAASC,IAAT,QAAqB,WAArB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,MAAMC,aAAN,SAA4BN,SAA5B,CAAsC;AAAA;AAAA;;AAAA,mCAC5B;AACNO,MAAAA,YAAY,EAAEC,MADR;AAENC,MAAAA,aAAa,EAAED,MAFT;AAGNE,MAAAA,WAAW,EAAE;AAHP,KAD4B;AAAA;;AAOpC,QAAMC,iBAAN,GAA0B;AACxB,SAAKC,QAAL,CAAc;AAAEL,MAAAA,YAAY,EAAE;AAAhB,KAAd;;AACA,QAAI;AACF,YAAMM,GAAG,GAAG,MAAMT,KAAK,CAACU,GAAN,CACf,uDAAsD,KAAKC,KAAL,CAAWR,YAAa,EAD/D,CAAlB;AAGA,WAAKK,QAAL,CAAc;AAAEF,QAAAA,WAAW,EAAEG,GAAG,CAACG,IAAJ,CAASC;AAAxB,OAAd;AACA,WAAKL,QAAL,CAAc;AAAEH,QAAAA,aAAa,EAAES,IAAI,CAACC,IAAL,CAAUN,GAAG,CAACG,IAAJ,CAAS,YAAT,IAAyB,CAAnC;AAAjB,OAAd;AACD,KAND,CAME,OAAOI,GAAP,EAAY;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACD;AACF;;AAEDG,EAAAA,WAAW,GAAG;AACZF,IAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ;AACA,UAAME,KAAK,GAAG,KAAKT,KAAL,CAAWL,WAAX,CAAuBe,GAAvB,CAA2BC,IAAI,IAAI;AAC/C,aAAO;AACLC,QAAAA,MAAM,EAAED,IAAI,CAACE,KADR;AAELC,QAAAA,WAAW,EAAEH,IAAI,CAACG,WAFb;AAGLC,QAAAA,KAAK,EAAE;AAHF,OAAP;AAKD,KANa,CAAd;AAOA,WAAO,MAAC,IAAD,CAAM,KAAN;AAAY,MAAA,KAAK,EAAEN;AAAnB,MAAP;AACD;;AAEDO,EAAAA,MAAM,GAAG;AACP,WACE,MAAC,MAAD,QACE,mBACE,uCADF,EAEGC,KAAK,CAACT,WAAN,EAFH,CADF,CADF;AAQD;;AAzCmC;;AA4CtC,eAAejB,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport axios from \"axios\";\nimport { Pagination } from \"semantic-ui-react\";\n\nclass ElectionIndex extends Component {\n  state = {\n    selectedPage: Number,\n    numberOfPages: Number,\n    listOfIdeas: []\n  };\n\n  async componentDidMount() {\n    this.setState({ selectedPage: 1 });\n    try {\n      const res = await axios.get(\n        `http://localhost:5000/api/ideas?itemsCount=5&pageNo=${this.state.selectedPage}`\n      );\n      this.setState({ listOfIdeas: res.data.ideas });\n      this.setState({ numberOfPages: Math.ceil(res.data[\"totalIdeas\"] / 5) });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  renderIdeas() {\n    console.log(\"test\");\n    const items = this.state.listOfIdeas.map(idea => {\n      return {\n        header: idea.Title,\n        description: idea.description,\n        fluid: true\n      };\n    });\n    return <Card.Group items={items} />;\n  }\n\n  render() {\n    return (\n      <Layout>\n        <div>\n          <h3>Dashboard Homepage</h3>\n          {thise.renderIdeas()}\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default ElectionIndex;\n"]},"metadata":{},"sourceType":"module"}