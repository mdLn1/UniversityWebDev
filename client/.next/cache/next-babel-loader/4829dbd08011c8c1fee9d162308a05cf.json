{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport { Button, Form, Grid, Header, Message, Segment, Container } from \"semantic-ui-react\";\nimport Head from \"next/head\";\nimport { Cookies } from \"react-cookie\";\nimport axios from \"axios\";\nconst cookies = new Cookies();\n\nclass LoginForm extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      email: \"\",\n      password: \"\"\n    });\n\n    _defineProperty(this, \"handleEmailChange\", event => {\n      this.setState({\n        email: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"handlePasswordChange\", event => {\n      this.setState({\n        password: event.target.value\n      });\n    });\n\n    _defineProperty(this, \"loginHandler\", async () => {\n      try {\n        const config = {\n          headers: {\n            \"Content-Type\": \"application/json\"\n          }\n        };\n        const obj = {\n          email: this.state.email,\n          password: this.state.password\n        };\n        const res = await axios.post(\"http://localhost:5000/api/auth/login/\", obj, config); //cookies.set(\"token\", res.data.token);\n\n        console.log(\"token:\" + res.data.token);\n      } catch (err) {\n        console.log(err);\n      }\n    });\n  }\n\n  render() {\n    return __jsx(Container, null, __jsx(Head, null, __jsx(\"link\", {\n      rel: \"stylesheet\",\n      href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n    })), __jsx(Grid, {\n      textAlign: \"center\",\n      style: {\n        height: \"100vh\"\n      },\n      verticalAlign: \"middle\"\n    }, __jsx(Grid.Column, {\n      style: {\n        maxWidth: 450\n      }\n    }, __jsx(Header, {\n      as: \"h2\",\n      color: \"teal\",\n      textAlign: \"center\"\n    }, \"Log-in to your account\"), __jsx(Form, {\n      size: \"large\",\n      onSubmit: this.loginHandler\n    }, __jsx(Segment, {\n      stacked: true\n    }, __jsx(Form.Input, {\n      required: true,\n      fluid: true,\n      icon: \"user\",\n      iconPosition: \"left\",\n      placeholder: \"E-mail address\",\n      type: \"email\",\n      onChange: this.handleEmailChange,\n      value: this.state.email\n    }), __jsx(Form.Input, {\n      required: true,\n      fluid: true,\n      icon: \"lock\",\n      iconPosition: \"left\",\n      placeholder: \"Password\",\n      type: \"password\",\n      onChange: this.handlePasswordChange,\n      value: this.state.password\n    }), __jsx(Button, {\n      color: \"teal\",\n      fluid: true,\n      size: \"large\"\n    }, \"Login\"))), __jsx(Message, null, \"New to us? \", __jsx(\"a\", {\n      href: \"/signup\"\n    }, \"Sign Up\")))));\n  }\n\n}\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/gabriel/Documents/UniversityWebDev/client/pages/index.js"],"names":["React","Component","Button","Form","Grid","Header","Message","Segment","Container","Head","Cookies","axios","cookies","LoginForm","email","password","event","setState","target","value","config","headers","obj","state","res","post","console","log","data","token","err","render","height","maxWidth","loginHandler","handleEmailChange","handlePasswordChange"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Message,\n  Segment,\n  Container\n} from \"semantic-ui-react\";\nimport Head from \"next/head\";\nimport { Cookies } from \"react-cookie\";\nimport axios from \"axios\";\n\nconst cookies = new Cookies();\n\nclass LoginForm extends Component {\n  state = {\n    email: \"\",\n    password: \"\"\n  };\n\n  handleEmailChange = event => {\n    this.setState({ email: event.target.value });\n  };\n\n  handlePasswordChange = event => {\n    this.setState({ password: event.target.value });\n  };\n\n  loginHandler = async () => {\n    try {\n      const config = {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      };\n      const obj = { email: this.state.email, password: this.state.password };\n      const res = await axios.post(\n        \"http://localhost:5000/api/auth/login/\",\n        obj,\n        config\n      );\n      //cookies.set(\"token\", res.data.token);\n      console.log(\"token:\" + res.data.token);\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  render() {\n    return (\n      <Container>\n        <Head>\n          <link\n            rel=\"stylesheet\"\n            href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n          />\n        </Head>\n        <Grid\n          textAlign=\"center\"\n          style={{ height: \"100vh\" }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n              Log-in to your account\n            </Header>\n            <Form size=\"large\" onSubmit={this.loginHandler}>\n              <Segment stacked>\n                <Form.Input\n                  required\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address\"\n                  type=\"email\"\n                  onChange={this.handleEmailChange}\n                  value={this.state.email}\n                />\n                <Form.Input\n                  required\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                  onChange={this.handlePasswordChange}\n                  value={this.state.password}\n                />\n\n                <Button color=\"teal\" fluid size=\"large\">\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <a href=\"/signup\">Sign Up</a>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}