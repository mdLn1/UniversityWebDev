{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport axios from \"axios\";\nimport { Pagination } from \"semantic-ui-react\";\n\nvar ElectionIndex = /*#__PURE__*/function (_Component) {\n  _inherits(ElectionIndex, _Component);\n\n  function ElectionIndex() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ElectionIndex);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ElectionIndex)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      selectedPage: \"\",\n      numberOfPages: \"\",\n      listOfIdeas: []\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setPageNum\", function _callee(event, _ref) {\n      var activePage;\n      return _regeneratorRuntime.async(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              activePage = _ref.activePage;\n\n              _this.setState({\n                selectedPage: activePage\n              });\n\n              _context.next = 4;\n              return _regeneratorRuntime.awrap(_this.updateListOfIdeas(activePage));\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, null, null, null, _Promise);\n    });\n\n    return _this;\n  }\n\n  _createClass(ElectionIndex, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var res;\n      return _regeneratorRuntime.async(function componentDidMount$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              this.setState({\n                selectedPage: 1\n              });\n              _context2.prev = 1;\n              _context2.next = 4;\n              return _regeneratorRuntime.awrap(axios.get(\"http://localhost:5000/api/ideas?itemsCount=5&pageNo=\".concat(this.state.selectedPage)));\n\n            case 4:\n              res = _context2.sent;\n              this.setState({\n                listOfIdeas: res.data.ideas\n              });\n              this.setState({\n                numberOfPages: Math.ceil(res.data[\"totalIdeas\"] / 5)\n              });\n              _context2.next = 12;\n              break;\n\n            case 9:\n              _context2.prev = 9;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 12:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, this, [[1, 9]], _Promise);\n    }\n  }, {\n    key: \"updateListOfIdeas\",\n    value: function updateListOfIdeas(activePage) {\n      var res;\n      return _regeneratorRuntime.async(function updateListOfIdeas$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.prev = 0;\n              _context3.next = 3;\n              return _regeneratorRuntime.awrap(axios.get(\"http://localhost:5000/api/ideas?itemsCount=5&pageNo=\".concat(activePage)));\n\n            case 3:\n              res = _context3.sent;\n              this.setState({\n                listOfIdeas: res.data.ideas\n              });\n              this.setState({\n                numberOfPages: Math.ceil(res.data[\"totalIdeas\"] / 5)\n              });\n              _context3.next = 11;\n              break;\n\n            case 8:\n              _context3.prev = 8;\n              _context3.t0 = _context3[\"catch\"](0);\n              console.log(_context3.t0);\n\n            case 11:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, null, this, [[0, 8]], _Promise);\n    }\n  }, {\n    key: \"renderIdeas\",\n    value: function renderIdeas() {\n      var items = this.state.listOfIdeas.map(function (idea, index) {\n        var extra = __jsx(\"div\", null, __jsx(\"p\", null, \"Posted by: \", __jsx(\"strong\", null, idea.author)), __jsx(\"p\", null, \"Date: \", __jsx(\"strong\", null, idea.poste_time)));\n\n        return {\n          key: index,\n          header: idea.Title,\n          description: idea.description,\n          fluid: true,\n          extra: extra\n        };\n      });\n      return __jsx(Card.Group, {\n        items: items\n      });\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this$state = this.state,\n          selectedPage = _this$state.selectedPage,\n          numberOfPages = _this$state.numberOfPages;\n      return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Dashboard Homepage\"), this.renderIdeas(), __jsx(\"br\", null), __jsx(Pagination, {\n        activePage: selectedPage,\n        totalPages: numberOfPages,\n        siblingRange: 1,\n        onPageChange: this.setPageNum\n      })));\n    }\n  }]);\n\n  return ElectionIndex;\n}(Component);\n\nexport default ElectionIndex;","map":{"version":3,"sources":["/Users/gabriel/Documents/UniversityWebDev/client/pages/index.js"],"names":["React","Component","Layout","Card","Link","axios","Pagination","ElectionIndex","selectedPage","numberOfPages","listOfIdeas","event","activePage","setState","updateListOfIdeas","get","state","res","data","ideas","Math","ceil","console","log","items","map","idea","index","extra","author","poste_time","key","header","Title","description","fluid","renderIdeas","setPageNum"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Card } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport axios from \"axios\";\nimport { Pagination } from \"semantic-ui-react\";\n\nclass ElectionIndex extends Component {\n  state = {\n    selectedPage: \"\",\n    numberOfPages: \"\",\n    listOfIdeas: []\n  };\n\n  async componentDidMount() {\n    this.setState({ selectedPage: 1 });\n    try {\n      const res = await axios.get(\n        `http://localhost:5000/api/ideas?itemsCount=5&pageNo=${this.state.selectedPage}`\n      );\n      this.setState({ listOfIdeas: res.data.ideas });\n      this.setState({ numberOfPages: Math.ceil(res.data[\"totalIdeas\"] / 5) });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async updateListOfIdeas(activePage) {\n    try {\n      const res = await axios.get(\n        `http://localhost:5000/api/ideas?itemsCount=5&pageNo=${activePage}`\n      );\n      this.setState({ listOfIdeas: res.data.ideas });\n      this.setState({ numberOfPages: Math.ceil(res.data[\"totalIdeas\"] / 5) });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  renderIdeas() {\n    const items = this.state.listOfIdeas.map((idea, index) => {\n      let extra = (\n        <div>\n          <p>\n            Posted by: <strong>{idea.author}</strong>\n          </p>\n          <p>\n            Date: <strong>{idea.poste_time}</strong>\n          </p>\n        </div>\n      );\n      return {\n        key: index,\n        header: idea.Title,\n        description: idea.description,\n        fluid: true,\n        extra: extra\n      };\n    });\n    return <Card.Group items={items} />;\n  }\n\n  setPageNum = async (event, { activePage }) => {\n    this.setState({ selectedPage: activePage });\n    await this.updateListOfIdeas(activePage);\n  };\n\n  render() {\n    const { selectedPage, numberOfPages } = this.state;\n    return (\n      <Layout>\n        <div>\n          <h3>Dashboard Homepage</h3>\n          {this.renderIdeas()}\n          <br></br>\n          <Pagination\n            activePage={selectedPage}\n            totalPages={numberOfPages}\n            siblingRange={1}\n            onPageChange={this.setPageNum}\n          />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default ElectionIndex;\n"]},"metadata":{},"sourceType":"module"}