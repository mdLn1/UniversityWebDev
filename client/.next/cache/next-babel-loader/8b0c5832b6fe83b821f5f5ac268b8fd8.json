{"ast":null,"code":"import _classCallCheck from \"@babel/runtime-corejs2/helpers/esm/classCallCheck\";\nimport _createClass from \"@babel/runtime-corejs2/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"@babel/runtime-corejs2/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime-corejs2/helpers/esm/getPrototypeOf\";\nimport _assertThisInitialized from \"@babel/runtime-corejs2/helpers/esm/assertThisInitialized\";\nimport _inherits from \"@babel/runtime-corejs2/helpers/esm/inherits\";\nimport _defineProperty from \"@babel/runtime-corejs2/helpers/esm/defineProperty\";\nvar __jsx = React.createElement;\nimport React, { Component } from \"react\";\nimport { Button, Form, Grid, Header, Image, Message, Segment, Container } from \"semantic-ui-react\";\nimport Head from \"next/head\";\n\nvar LoginForm = /*#__PURE__*/function (_Component) {\n  _inherits(LoginForm, _Component);\n\n  function LoginForm() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, LoginForm);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(LoginForm)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _defineProperty(_assertThisInitialized(_this), \"state\", {\n      username: \"\",\n      password: \"\"\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"loginHandler\", function (async) {\n      console.log(\"clicked\");\n    });\n\n    return _this;\n  }\n\n  _createClass(LoginForm, [{\n    key: \"render\",\n    value: function render() {\n      return __jsx(Container, null, __jsx(Head, null, __jsx(\"link\", {\n        rel: \"stylesheet\",\n        href: \"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n      })), __jsx(Grid, {\n        textAlign: \"center\",\n        style: {\n          height: \"100vh\"\n        },\n        verticalAlign: \"middle\"\n      }, __jsx(Grid.Column, {\n        style: {\n          maxWidth: 450\n        }\n      }, __jsx(Header, {\n        as: \"h2\",\n        color: \"teal\",\n        textAlign: \"center\"\n      }, \"Log-in to your account\"), __jsx(Form, {\n        size: \"large\",\n        onSubmit: this.loginHandler\n      }, __jsx(Segment, {\n        stacked: true\n      }, __jsx(Form.Input, {\n        required: true,\n        fluid: true,\n        icon: \"user\",\n        iconPosition: \"left\",\n        placeholder: \"E-mail address\",\n        type: \"email\"\n      }), __jsx(Form.Input, {\n        required: true,\n        fluid: true,\n        icon: \"lock\",\n        iconPosition: \"left\",\n        placeholder: \"Password\",\n        type: \"password\"\n      }), __jsx(Dropdown, {\n        placeholder: \"Select Friend\",\n        fluid: true,\n        selection: true,\n        options: friendOptions\n      }), __jsx(Button, {\n        color: \"teal\",\n        fluid: true,\n        size: \"large\"\n      }, \"Login\"))), __jsx(Message, null, \"New to us? \", __jsx(\"a\", {\n        href: \"/signup\"\n      }, \"Sign Up\")))));\n    }\n  }]);\n\n  return LoginForm;\n}(Component);\n\nexport default LoginForm;","map":{"version":3,"sources":["/Users/gabriel/Documents/UniversityWebDev/client/pages/index.js"],"names":["React","Component","Button","Form","Grid","Header","Image","Message","Segment","Container","Head","LoginForm","username","password","async","console","log","height","maxWidth","loginHandler","friendOptions"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SACEC,MADF,EAEEC,IAFF,EAGEC,IAHF,EAIEC,MAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,OAPF,EAQEC,SARF,QASO,mBATP;AAUA,OAAOC,IAAP,MAAiB,WAAjB;;IAEMC,S;;;;;;;;;;;;;;;;4DACI;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,QAAQ,EAAE;AAFJ,K;;mEAKO,UAAAC,KAAK,EAAI;AACtBC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACD,K;;;;;;;6BAEQ;AACP,aACE,MAAC,SAAD,QACE,MAAC,IAAD,QACE;AACE,QAAA,GAAG,EAAC,YADN;AAEE,QAAA,IAAI,EAAC;AAFP,QADF,CADF,EAOE,MAAC,IAAD;AACE,QAAA,SAAS,EAAC,QADZ;AAEE,QAAA,KAAK,EAAE;AAAEC,UAAAA,MAAM,EAAE;AAAV,SAFT;AAGE,QAAA,aAAa,EAAC;AAHhB,SAKE,MAAC,IAAD,CAAM,MAAN;AAAa,QAAA,KAAK,EAAE;AAAEC,UAAAA,QAAQ,EAAE;AAAZ;AAApB,SACE,MAAC,MAAD;AAAQ,QAAA,EAAE,EAAC,IAAX;AAAgB,QAAA,KAAK,EAAC,MAAtB;AAA6B,QAAA,SAAS,EAAC;AAAvC,kCADF,EAIE,MAAC,IAAD;AAAM,QAAA,IAAI,EAAC,OAAX;AAAmB,QAAA,QAAQ,EAAE,KAAKC;AAAlC,SACE,MAAC,OAAD;AAAS,QAAA,OAAO;AAAhB,SACE,MAAC,IAAD,CAAM,KAAN;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,YAAY,EAAC,MAJf;AAKE,QAAA,WAAW,EAAC,gBALd;AAME,QAAA,IAAI,EAAC;AANP,QADF,EASE,MAAC,IAAD,CAAM,KAAN;AACE,QAAA,QAAQ,MADV;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,IAAI,EAAC,MAHP;AAIE,QAAA,YAAY,EAAC,MAJf;AAKE,QAAA,WAAW,EAAC,UALd;AAME,QAAA,IAAI,EAAC;AANP,QATF,EAiBE,MAAC,QAAD;AACE,QAAA,WAAW,EAAC,eADd;AAEE,QAAA,KAAK,MAFP;AAGE,QAAA,SAAS,MAHX;AAIE,QAAA,OAAO,EAAEC;AAJX,QAjBF,EAwBE,MAAC,MAAD;AAAQ,QAAA,KAAK,EAAC,MAAd;AAAqB,QAAA,KAAK,MAA1B;AAA2B,QAAA,IAAI,EAAC;AAAhC,iBAxBF,CADF,CAJF,EAkCE,MAAC,OAAD,uBACa;AAAG,QAAA,IAAI,EAAC;AAAR,mBADb,CAlCF,CALF,CAPF,CADF;AAsDD;;;;EAjEqBnB,S;;AAoExB,eAAeU,SAAf","sourcesContent":["import React, { Component } from \"react\";\nimport {\n  Button,\n  Form,\n  Grid,\n  Header,\n  Image,\n  Message,\n  Segment,\n  Container\n} from \"semantic-ui-react\";\nimport Head from \"next/head\";\n\nclass LoginForm extends Component {\n  state = {\n    username: \"\",\n    password: \"\"\n  };\n\n  loginHandler = async => {\n    console.log(\"clicked\");\n  };\n\n  render() {\n    return (\n      <Container>\n        <Head>\n          <link\n            rel=\"stylesheet\"\n            href=\"//cdn.jsdelivr.net/npm/semantic-ui@2.4.2/dist/semantic.min.css\"\n          />\n        </Head>\n        <Grid\n          textAlign=\"center\"\n          style={{ height: \"100vh\" }}\n          verticalAlign=\"middle\"\n        >\n          <Grid.Column style={{ maxWidth: 450 }}>\n            <Header as=\"h2\" color=\"teal\" textAlign=\"center\">\n              Log-in to your account\n            </Header>\n            <Form size=\"large\" onSubmit={this.loginHandler}>\n              <Segment stacked>\n                <Form.Input\n                  required\n                  fluid\n                  icon=\"user\"\n                  iconPosition=\"left\"\n                  placeholder=\"E-mail address\"\n                  type=\"email\"\n                />\n                <Form.Input\n                  required\n                  fluid\n                  icon=\"lock\"\n                  iconPosition=\"left\"\n                  placeholder=\"Password\"\n                  type=\"password\"\n                />\n                <Dropdown\n                  placeholder=\"Select Friend\"\n                  fluid\n                  selection\n                  options={friendOptions}\n                />\n\n                <Button color=\"teal\" fluid size=\"large\">\n                  Login\n                </Button>\n              </Segment>\n            </Form>\n            <Message>\n              New to us? <a href=\"/signup\">Sign Up</a>\n            </Message>\n          </Grid.Column>\n        </Grid>\n      </Container>\n    );\n  }\n}\n\nexport default LoginForm;\n"]},"metadata":{},"sourceType":"module"}