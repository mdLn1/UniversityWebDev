{"ast":null,"code":"var __jsx = React.createElement;\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nimport React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Card, Icon, Button } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport axios from \"axios\";\nimport { Pagination } from \"semantic-ui-react\";\n\nclass ElectionIndex extends Component {\n  constructor(...args) {\n    super(...args);\n\n    _defineProperty(this, \"state\", {\n      selectedPage: \"\",\n      numberOfPages: \"\",\n      listOfIdeas: []\n    });\n\n    _defineProperty(this, \"setPageNum\", async (event, {\n      activePage\n    }) => {\n      this.setState({\n        selectedPage: activePage\n      });\n      await this.updateListOfIdeas(activePage);\n    });\n  }\n\n  async componentDidMount() {\n    this.setState({\n      selectedPage: 1\n    });\n\n    try {\n      const res = await axios.get(`http://localhost:5000/api/ideas?itemsCount=5&pageNo=${this.state.selectedPage}`);\n      this.setState({\n        listOfIdeas: res.data.ideas\n      });\n      this.setState({\n        numberOfPages: Math.ceil(res.data[\"totalIdeas\"] / 5)\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async updateListOfIdeas(activePage) {\n    try {\n      const res = await axios.get(`http://localhost:5000/api/ideas?itemsCount=5&pageNo=${activePage}`);\n      this.setState({\n        listOfIdeas: res.data.ideas\n      });\n      this.setState({\n        numberOfPages: Math.ceil(res.data[\"totalIdeas\"] / 5)\n      });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  renderIdeas() {\n    const items = this.state.listOfIdeas.map((idea, index) => {\n      const rightStyle = {\n        float: \"right\"\n      };\n      const leftStyle = {\n        float: \"left\"\n      };\n\n      let header = __jsx(\"div\", null, __jsx(\"div\", {\n        style: leftStyle\n      }, __jsx(\"h3\", null, idea.Title)), __jsx(\"div\", {\n        style: rightStyle\n      }, __jsx(Button, {\n        color: \"red\",\n        size: \"mini\"\n      }, \"Report\")));\n\n      let extra = __jsx(\"div\", null, __jsx(\"div\", {\n        style: rightStyle\n      }, __jsx(\"p\", null, \"Posted by: \", __jsx(\"strong\", null, idea.author)), __jsx(\"p\", null, \"Date: \", __jsx(\"strong\", null, idea.posted_time.slice(0, 10)))), __jsx(\"div\", {\n        style: leftStyle\n      }, __jsx(\"p\", null, __jsx(Link, {\n        route: `/`\n      }, __jsx(\"a\", null, __jsx(Icon, {\n        name: \"thumbs up outline\"\n      }))), __jsx(\"span\", null, idea.positiveVotes), __jsx(\"span\", {\n        style: {\n          marginRight: \"2rem\"\n        }\n      }), __jsx(Link, {\n        route: `/`\n      }, __jsx(\"a\", null, __jsx(Icon, {\n        name: \"thumbs down outline\"\n      }))), __jsx(\"span\", null, idea.negativeVotes)), __jsx(Button, {\n        size: \"tiny\"\n      }, \"Comments (\", idea.commentsCount, \")\")));\n\n      return {\n        key: index,\n        header: header,\n        description: idea.description,\n        fluid: true,\n        extra: extra\n      };\n    });\n    return __jsx(Card.Group, {\n      items: items\n    });\n  }\n\n  render() {\n    const {\n      selectedPage,\n      numberOfPages\n    } = this.state;\n    return __jsx(Layout, null, __jsx(\"div\", null, __jsx(\"h3\", null, \"Dashboard Homepage\"), this.renderIdeas(), __jsx(\"br\", null), __jsx(Pagination, {\n      activePage: selectedPage,\n      totalPages: numberOfPages,\n      siblingRange: 1,\n      onPageChange: this.setPageNum\n    })));\n  }\n\n}\n\nexport default ElectionIndex;","map":{"version":3,"sources":["/Users/gabriel/Documents/UniversityWebDev/client/pages/index.js"],"names":["React","Component","Layout","Card","Icon","Button","Link","axios","Pagination","ElectionIndex","selectedPage","numberOfPages","listOfIdeas","event","activePage","setState","updateListOfIdeas","componentDidMount","res","get","state","data","ideas","Math","ceil","err","console","log","renderIdeas","items","map","idea","index","rightStyle","float","leftStyle","header","Title","extra","author","posted_time","slice","positiveVotes","marginRight","negativeVotes","commentsCount","key","description","fluid","render","setPageNum"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport Layout from \"../components/Layout\";\nimport { Card, Icon, Button } from \"semantic-ui-react\";\nimport { Link } from \"../routes\";\nimport axios from \"axios\";\nimport { Pagination } from \"semantic-ui-react\";\n\nclass ElectionIndex extends Component {\n  state = {\n    selectedPage: \"\",\n    numberOfPages: \"\",\n    listOfIdeas: []\n  };\n\n  async componentDidMount() {\n    this.setState({ selectedPage: 1 });\n    try {\n      const res = await axios.get(\n        `http://localhost:5000/api/ideas?itemsCount=5&pageNo=${this.state.selectedPage}`\n      );\n      this.setState({ listOfIdeas: res.data.ideas });\n      this.setState({ numberOfPages: Math.ceil(res.data[\"totalIdeas\"] / 5) });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  async updateListOfIdeas(activePage) {\n    try {\n      const res = await axios.get(\n        `http://localhost:5000/api/ideas?itemsCount=5&pageNo=${activePage}`\n      );\n      this.setState({ listOfIdeas: res.data.ideas });\n      this.setState({ numberOfPages: Math.ceil(res.data[\"totalIdeas\"] / 5) });\n    } catch (err) {\n      console.log(err);\n    }\n  }\n\n  renderIdeas() {\n    const items = this.state.listOfIdeas.map((idea, index) => {\n      const rightStyle = {\n        float: \"right\"\n      };\n\n      const leftStyle = {\n        float: \"left\"\n      };\n\n      let header = (\n        <div>\n          <div style={leftStyle}>\n            <h3>{idea.Title}</h3>\n          </div>\n          <div style={rightStyle}>\n            <Button color=\"red\" size=\"mini\">\n              Report\n            </Button>\n          </div>\n        </div>\n      );\n\n      let extra = (\n        <div>\n          <div style={rightStyle}>\n            <p>\n              Posted by: <strong>{idea.author}</strong>\n            </p>\n            <p>\n              Date: <strong>{idea.posted_time.slice(0, 10)}</strong>\n            </p>\n          </div>\n          <div style={leftStyle}>\n            <p>\n              <Link route={`/`}>\n                <a>\n                  <Icon name=\"thumbs up outline\"></Icon>\n                </a>\n              </Link>\n              <span>{idea.positiveVotes}</span>\n              <span style={{ marginRight: \"2rem\" }} />\n              <Link route={`/`}>\n                <a>\n                  <Icon name=\"thumbs down outline\"></Icon>\n                </a>\n              </Link>\n              <span>{idea.negativeVotes}</span>\n            </p>\n            <Button size=\"tiny\">Comments ({idea.commentsCount})</Button>\n          </div>\n        </div>\n      );\n      return {\n        key: index,\n        header: header,\n        description: idea.description,\n        fluid: true,\n        extra: extra\n      };\n    });\n    return <Card.Group items={items} />;\n  }\n\n  setPageNum = async (event, { activePage }) => {\n    this.setState({ selectedPage: activePage });\n    await this.updateListOfIdeas(activePage);\n  };\n\n  render() {\n    const { selectedPage, numberOfPages } = this.state;\n    return (\n      <Layout>\n        <div>\n          <h3>Dashboard Homepage</h3>\n          {this.renderIdeas()}\n          <br></br>\n          <Pagination\n            activePage={selectedPage}\n            totalPages={numberOfPages}\n            siblingRange={1}\n            onPageChange={this.setPageNum}\n          />\n        </div>\n      </Layout>\n    );\n  }\n}\n\nexport default ElectionIndex;\n"]},"metadata":{},"sourceType":"module"}